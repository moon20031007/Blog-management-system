{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      article: {},\n      tags: ['打工人', '求下班'],\n      comments: [{\n        commentId: 1,\n        commenter: 'Anson',\n        content: '快下班',\n        comment_time: '2024-8-9',\n        like_count: 10000\n      }, {\n        commentId: 2,\n        commenter: 'Anson',\n        content: '快快下班',\n        comment_time: '2024-8-9',\n        like_count: 10000\n      }, {\n        commentId: 3,\n        commenter: 'Anson',\n        content: '没事哒',\n        comment_time: '2024-8-9',\n        like_count: 10000\n      }, {\n        commentId: 4,\n        commenter: 'Anson',\n        content: '好好好',\n        comment_time: '2024-8-9',\n        like_count: 10000\n      }],\n      replies: [{\n        replyId: 1,\n        replierId: 1,\n        commentId: 1,\n        replyType: 0,\n        content: \"回复内容\",\n        replyTime: '2024-8-9',\n        likeCount: 0,\n        toId: 1,\n        toReplyId: 1\n      }, {\n        replyId: 2,\n        replierId: 1,\n        commentId: 1,\n        replyType: 1,\n        content: \"回复的回复内容\",\n        replyTime: '2024-8-9',\n        likeCount: 0,\n        toId: 1,\n        toReplyId: 1\n      }],\n      dialogFormVisible: false,\n      form: {\n        replies: [{\n          title: 'yiyi '\n        }, {}, {}]\n      },\n      activeNames: []\n    };\n  },\n  async created() {\n    await this.fetchArticle();\n    await this.fetchTags();\n    await this.fetchReplies();\n  },\n  methods: {\n    handleChange(val) {\n      console.log(val);\n    },\n    findReplies(id) {\n      return this.replies.filter(reply => reply.commentId === id);\n    },\n    async fetchArticle() {\n      axios.get(`http://localhost:7000/article/detail/${this.$route.params.id}`).then(response => {\n        this.article = response.data.data;\n      }).catch(error => {\n        console.error('获取文章失败:', error);\n        this.$message.error('获取文章失败');\n      });\n    },\n    async fetchTags() {\n      axios.get(`http://localhost:7000/article/detail/${this.$route.params.id}`).then(response => {\n        this.tags = response.data.data;\n        console.log('获取标签中');\n      }).catch(error => {\n        console.error('获取标签失败:', error);\n        this.$message.error('获取标签失败');\n      });\n    },\n    async fetchReplies() {\n      axios.get(`http://localhost:7000/tag/${this.$route.params.id}/articles`).then(response => {\n        this.Articles = response.data.data;\n      }).catch(error => {\n        console.error('获取回复失败:', error);\n        this.$message.error('获取标签失败');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","article","tags","comments","commentId","commenter","content","comment_time","like_count","replies","replyId","replierId","replyType","replyTime","likeCount","toId","toReplyId","dialogFormVisible","form","title","activeNames","created","fetchArticle","fetchTags","fetchReplies","methods","handleChange","val","console","log","findReplies","id","filter","reply","get","$route","params","then","response","catch","error","$message","Articles"],"sources":["src/views/ArticleView.vue"],"sourcesContent":["<template>\n    <div>\n        <my-nav></my-nav>\n        <el-container>\n            <el-aside width=\"300px\"><my-asi-list></my-asi-list></el-aside>\n            <el-main>\n                <article>\n                    <h2>{{ article.title }}</h2>\n                    <el-card class=\"custom-card\">\n                        <div class=\"card-content\">\n                            <i class=\"el-icon-user-solid\"></i>{{ article.author }}\n                            <i class=\"el-icon-upload\"></i>{{ article.publishTime }}\n                            <i class=\"el-icon-view\"></i>{{ article.readCount }}\n                            <i class=\"el-icon-star-off\"></i>{{ article.likeCount }}\n                            <i class=\"el-icon-chat-line-round\"></i>{{ article.commentCount }}\n                        </div>\n                        <div>\n                            文章标签:\n                            <div v-for=\"tag in tags\" :key=\"tag\" class=\"tag\">\n                                {{ tag }}\n                            </div>\n                        </div>\n                    </el-card>\n                    <p>{{ article.content }}</p>\n                </article>\n                <el-card>\n                    <h3>评论区</h3>\n                    <div v-for=\"comment in comments\" :key=\"comment\">\n                        <i class=\"el-icon-user-solid user\">{{ comment.commenter }}</i><br>\n                        {{ comment.content }}<br>\n                        <small>\n                            <i class=\"el-icon-time\"></i>{{ comment.comment_time }}\n                            <i class=\"el-icon-star-off\"></i>{{ comment.like_count }}\n                        </small>\n                        <el-button type=\"text\" @click=\"dialogFormVisible = true\"><i class=\"el-icon-chat-line-square\">回复</i></el-button>\n                        <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\n                            <el-collapse-item title=\"展开回复\" :name=comment.commentId>\n                                <div v-for=\"reply in findReplies(comment.commentId)\" :key=\"reply\">\n                                    <i class=\"el-icon-user-solid user\">{{ reply.replierId }}这是名字：</i>\n                                    <template v-if=\"reply.replyType == 1\">\n                                        <span class=\"user\">@{{ reply.toId }} </span>\n                                    </template>\n                                    {{ reply.content }}<br>\n                                    <i class=\"el-icon-time\"></i>{{ reply.replyTime }}\n                                    <i class=\"el-icon-star-off\"></i>{{ comment.like_count }}\n                                    回复<br>\n                                </div>\n                            </el-collapse-item>\n                        </el-collapse>\n                        <el-dialog :visible.sync=\"dialogFormVisible\">\n                            <el-form :model=\"form\">\n                                <el-form-item label=\"回复\">\n                                    <el-input v-model=\"form.reply\" autocomplete=\"off\"></el-input>\n                                </el-form-item>\n                            </el-form>\n                            <div slot=\"footer\" class=\"dialog-footer\">\n                                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n                                <el-button type=\"primary\" @click=\"dialogFormVisible = false\">确 定</el-button>\n                            </div>\n                        </el-dialog>\n                    </div>\n                </el-card>\n            </el-main>\n        </el-container>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            article: {},\n            tags: ['打工人', '求下班'],\n            comments: [\n                { commentId: 1, commenter: 'Anson', content: '快下班', comment_time: '2024-8-9', like_count: 10000 },\n                { commentId: 2, commenter: 'Anson', content: '快快下班', comment_time: '2024-8-9', like_count: 10000 },\n                { commentId: 3, commenter: 'Anson', content: '没事哒', comment_time: '2024-8-9', like_count: 10000 },\n                { commentId: 4, commenter: 'Anson', content: '好好好', comment_time: '2024-8-9', like_count: 10000 },\n            ],\n            replies: [\n                {replyId: 1, replierId: 1, commentId: 1, replyType: 0, content: \"回复内容\", replyTime: '2024-8-9', likeCount: 0, toId: 1, toReplyId: 1},\n                {replyId: 2, replierId: 1, commentId: 1, replyType: 1, content: \"回复的回复内容\", replyTime: '2024-8-9', likeCount: 0, toId: 1, toReplyId: 1}\n            ],\n            dialogFormVisible: false,\n            form: {\n                replies: [\n                    {title: 'yiyi '},\n                    {},\n                    {}\n                ]\n            },\n            activeNames: []\n        };\n    },\n    async created() {\n        await this.fetchArticle();\n        await this.fetchTags();\n        await this.fetchReplies();\n    },\n    methods: {\n        handleChange(val) {\n            console.log(val);\n        },\n        findReplies(id) {\n            return this.replies.filter(reply => reply.commentId === id);\n        },\n        async fetchArticle() {\n            axios.get(`http://localhost:7000/article/detail/${this.$route.params.id}`)\n                .then(response => {\n                    this.article = response.data.data;\n                })\n                .catch(error => {\n                    console.error('获取文章失败:', error);\n                    this.$message.error('获取文章失败');\n                });\n        },\n        async fetchTags() {\n            axios.get(`http://localhost:7000/article/detail/${this.$route.params.id}`)\n                .then(response => {\n                    this.tags = response.data.data;\n                    console.log('获取标签中');\n                })\n                .catch(error => {\n                    console.error('获取标签失败:', error);\n                    this.$message.error('获取标签失败');\n                });\n        },\n        async fetchReplies() {\n            axios.get(`http://localhost:7000/tag/${this.$route.params.id}/articles`)\n                .then(response => {\n                    this.Articles = response.data.data;\n                })\n                .catch(error => {\n                    console.error('获取回复失败:', error);\n                    this.$message.error('获取标签失败');\n                });\n        },\n    }\n}\n</script>\n\n<style>\n.user {\n    color: slateblue;\n}\n\n.custom-card {\n    padding: 0px;\n}\n\n.card-content {\n    margin-bottom: 10px;\n}\n\n.tag {\n    display: inline;\n    margin-right: 5px;\n}\n</style>"],"mappings":"AAoEA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,IAAA;MACAC,QAAA,GACA;QAAAC,SAAA;QAAAC,SAAA;QAAAC,OAAA;QAAAC,YAAA;QAAAC,UAAA;MAAA,GACA;QAAAJ,SAAA;QAAAC,SAAA;QAAAC,OAAA;QAAAC,YAAA;QAAAC,UAAA;MAAA,GACA;QAAAJ,SAAA;QAAAC,SAAA;QAAAC,OAAA;QAAAC,YAAA;QAAAC,UAAA;MAAA,GACA;QAAAJ,SAAA;QAAAC,SAAA;QAAAC,OAAA;QAAAC,YAAA;QAAAC,UAAA;MAAA,EACA;MACAC,OAAA,GACA;QAAAC,OAAA;QAAAC,SAAA;QAAAP,SAAA;QAAAQ,SAAA;QAAAN,OAAA;QAAAO,SAAA;QAAAC,SAAA;QAAAC,IAAA;QAAAC,SAAA;MAAA,GACA;QAAAN,OAAA;QAAAC,SAAA;QAAAP,SAAA;QAAAQ,SAAA;QAAAN,OAAA;QAAAO,SAAA;QAAAC,SAAA;QAAAC,IAAA;QAAAC,SAAA;MAAA,EACA;MACAC,iBAAA;MACAC,IAAA;QACAT,OAAA,GACA;UAAAU,KAAA;QAAA,GACA,IACA;MAEA;MACAC,WAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,YAAA;IACA,WAAAC,SAAA;IACA,WAAAC,YAAA;EACA;EACAC,OAAA;IACAC,aAAAC,GAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;IACAG,YAAAC,EAAA;MACA,YAAAtB,OAAA,CAAAuB,MAAA,CAAAC,KAAA,IAAAA,KAAA,CAAA7B,SAAA,KAAA2B,EAAA;IACA;IACA,MAAAT,aAAA;MACAvB,KAAA,CAAAmC,GAAA,8CAAAC,MAAA,CAAAC,MAAA,CAAAL,EAAA,IACAM,IAAA,CAAAC,QAAA;QACA,KAAArC,OAAA,GAAAqC,QAAA,CAAAtC,IAAA,CAAAA,IAAA;MACA,GACAuC,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,YAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACA,MAAAjB,UAAA;MACAxB,KAAA,CAAAmC,GAAA,8CAAAC,MAAA,CAAAC,MAAA,CAAAL,EAAA,IACAM,IAAA,CAAAC,QAAA;QACA,KAAApC,IAAA,GAAAoC,QAAA,CAAAtC,IAAA,CAAAA,IAAA;QACA4B,OAAA,CAAAC,GAAA;MACA,GACAU,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,YAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACA,MAAAhB,aAAA;MACAzB,KAAA,CAAAmC,GAAA,mCAAAC,MAAA,CAAAC,MAAA,CAAAL,EAAA,aACAM,IAAA,CAAAC,QAAA;QACA,KAAAI,QAAA,GAAAJ,QAAA,CAAAtC,IAAA,CAAAA,IAAA;MACA,GACAuC,KAAA,CAAAC,KAAA;QACAZ,OAAA,CAAAY,KAAA,YAAAA,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}