{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    var validateId = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        id: [{\n          validator: validateId,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        console.log(\"-----------\");\n        console.log(this.ruleForm);\n        console.log(\"-----------\");\n        if (valid) {\n          axios.post('http://localhost:7000/account', this.ruleForm).then(response => {\n            console.log(response.data);\n            alert('登录成功！');\n          }).catch(error => {\n            console.error('登录失败:', error);\n            alert('登录失败，请检查您的用户名和密码。');\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validateId","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass","username","password","rules","id","validator","trigger","pass","methods","submitForm","formName","validate","valid","console","log","post","then","response","alert","catch","error","resetForm","resetFields"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div style=\"border: 1px solid #dcdfe6; padding: 20px; border-radius: 4px; width: 30%; margin: 10% auto 0;\">\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n            <el-form-item label=\"用户名\" prop=\"username\">\n                <el-input v-model.number=\"ruleForm.id\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"密码\" prop=\"password\">\n                <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n                <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        var validateId = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else {\n                if (this.ruleForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkPass');\n                }\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else {\n                if (this.ruleForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkPass');\n                }\n                callback();\n            }\n        };\n        return {\n            ruleForm: {\n                username: '',\n                password: ''\n            },\n            rules: {\n                id: [\n                    { validator: validateId, trigger: 'blur' }\n                ],\n                pass: [\n                    { validator: validatePass, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                console.log(\"-----------\");\n                console.log(this.ruleForm);\n                console.log(\"-----------\");\n                if (valid) {\n                    axios.post('http://localhost:7000/account', this.ruleForm)\n                        .then(response => {\n                            console.log(response.data);\n                            alert('登录成功！');\n                        })\n                        .catch(error => {\n                            console.error('登录失败:', error);\n                            alert('登录失败，请检查您的用户名和密码。');\n                        });\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        }\n    }\n}\n</script>\n\n<style></style>"],"mappings":"AAmBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,YAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA;MACAE,QAAA;QACAK,QAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAC,EAAA,GACA;UAAAC,SAAA,EAAAd,UAAA;UAAAe,OAAA;QAAA,EACA;QACAC,IAAA,GACA;UAAAF,SAAA,EAAAL,YAAA;UAAAM,OAAA;QAAA;MAEA;IACA;EACA;EACAE,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAZ,KAAA,CAAAY,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,MAAAlB,QAAA;QACAiB,OAAA,CAAAC,GAAA;QACA,IAAAF,KAAA;UACAvB,KAAA,CAAA0B,IAAA,uCAAAnB,QAAA,EACAoB,IAAA,CAAAC,QAAA;YACAJ,OAAA,CAAAC,GAAA,CAAAG,QAAA,CAAA3B,IAAA;YACA4B,KAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACAP,OAAA,CAAAO,KAAA,UAAAA,KAAA;YACAF,KAAA;UACA;QACA;UACAL,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAO,UAAAX,QAAA;MACA,KAAAZ,KAAA,CAAAY,QAAA,EAAAY,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}