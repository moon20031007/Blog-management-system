{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    var validateId = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        id: '',\n        pass: ''\n      },\n      rules: {\n        id: [{\n          validator: validateId,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const form = {\n          username: this.ruleForm.id,\n          password: this.ruleForm.pass\n        };\n        if (valid) {\n          axios.post('/user/login', form).then(response => {\n            console.log(response.data);\n            this.$message({\n              message: '登录成功！',\n              type: 'success'\n            });\n            this.$router.push('/');\n          }).catch(error => {\n            console.error('登录失败:', error);\n            this.$message.error('登录失败，请检查用户名和密码');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validateId","rule","value","callback","Error","validatePass","ruleForm","id","pass","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","form","username","password","post","then","response","console","log","$message","message","type","$router","push","catch","error","resetForm","resetFields"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div style=\"border: 1px solid #dcdfe6; padding: 30px; border-radius: 4px; width: 30%; margin: 10% auto 0;\">\n        <div class=\"link-container\"><el-button plain ><router-link to=\"/\">回到首页</router-link></el-button></div>\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n            \n            <div class=\"login-container\">\n                <el-form-item label=\"用户名\" prop=\"id\">\n                <el-input v-model.number=\"ruleForm.id\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"pass\">\n                    <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n            </div>\n            <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n                <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n            </el-form-item>\n        </el-form> \n        <div class=\"link-container\"><router-link to=\"/signup\" class=\"small-font-link\" >还没有账号？去注册</router-link></div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        var validateId = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else {\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            ruleForm: {\n                id: '',\n                pass: ''\n            },\n            rules: {\n                id: [\n                    { validator: validateId, trigger: 'blur' }\n                ],\n                pass: [\n                    { validator: validatePass, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                const form = { username: this.ruleForm.id, password: this.ruleForm.pass };\n                if (valid) {\n                    axios.post('/user/login', form)\n                        .then(response => {\n                            console.log(response.data);\n                            this.$message({\n                                message: '登录成功！',\n                                type: 'success'\n                            });\n                            this.$router.push('/');\n                        })\n                        .catch(error => {\n                            console.error('登录失败:', error);\n                            this.$message.error('登录失败，请检查用户名和密码');\n                        });\n                } else {\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        }\n    }\n}\n</script>\n\n<style>\n.login-container{\n    position: relative;\n}\n.small-font-link {\n    float: right;\n    font-size: 15px; /* 调整字体大小 */\n}\n.link-container {\n  text-align: right; /* 将链接对齐到右边 */\n  margin-bottom: 10px; /* 与表单项之间的间距 */\n}\n\n.link-container {\n  text-align: right; /* 将链接对齐到右边 */\n  margin-bottom: 10px; /* 与表单项之间的间距 */\n}\n</style>"],"mappings":";AAuBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA,IAAAE,YAAA,GAAAA,CAAAJ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAG,QAAA;QACAC,EAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAF,EAAA,GACA;UAAAG,SAAA,EAAAV,UAAA;UAAAW,OAAA;QAAA,EACA;QACAH,IAAA,GACA;UAAAE,SAAA,EAAAL,YAAA;UAAAM,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,MAAAC,IAAA;UAAAC,QAAA,OAAAb,QAAA,CAAAC,EAAA;UAAAa,QAAA,OAAAd,QAAA,CAAAE;QAAA;QACA,IAAAS,KAAA;UACAnB,KAAA,CAAAuB,IAAA,gBAAAH,IAAA,EACAI,IAAA,CAAAC,QAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAxB,IAAA;YACA,KAAA2B,QAAA;cACAC,OAAA;cACAC,IAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACAR,OAAA,CAAAQ,KAAA,UAAAA,KAAA;YACA,KAAAN,QAAA,CAAAM,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC,UAAAnB,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAoB,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}