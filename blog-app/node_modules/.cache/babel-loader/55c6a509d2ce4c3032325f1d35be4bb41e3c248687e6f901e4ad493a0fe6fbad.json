{"ast":null,"code":"export default {\n  data() {\n    var validateId = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        id: '',\n        pass: ''\n      },\n      rules: {\n        id: [{\n          validator: validateId,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          alert('submit!');\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","validateId","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass","id","pass","rules","validator","trigger","methods","submitForm","formName","validate","valid","alert","console","log","resetForm","resetFields"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div style=\"border: 1px solid #dcdfe6; padding: 20px; border-radius: 4px; width: 30%; margin: 10% auto 0;\">\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n        <el-form-item label=\"用户名\" prop=\"id\">\n            <el-input v-model.number=\"ruleForm.id\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"pass\">\n            <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        \n        <el-form-item>\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\n        </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\n    export default {\n    data() {\n      var validateId = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入用户名'));\n        } else {\n          if (this.ruleForm.checkPass !== '') {\n            this.$refs.ruleForm.validateField('checkPass');\n          }\n          callback();\n        }\n      };\n      var validatePass = (rule, value, callback) => {\n        if (value === '') {\n          callback(new Error('请输入密码'));\n        } else {\n          if (this.ruleForm.checkPass !== '') {\n            this.$refs.ruleForm.validateField('checkPass');\n          }\n          callback();\n        }\n      };\n      return {\n        ruleForm: {\n          id: '',\n          pass: ''\n        },\n        rules: {\n        id: [\n            { validator: validateId, trigger: 'blur' }\n        ],\n        pass: [\n            { validator: validatePass, trigger: 'blur' }\n        ]\n        }\n      };\n    },\n    methods: {\n      submitForm(formName) {\n        this.$refs[formName].validate((valid) => {\n          if (valid) {\n            alert('submit!');\n          } else {\n            console.log('error submit!!');\n            return false;\n          }\n        });\n      },\n      resetForm(formName) {\n        this.$refs[formName].resetFields();\n      }\n    }\n  }\n</script>\n\n<style>\n\n</style>"],"mappings":"AAmBA;EACAA,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA,IAAAM,YAAA,GAAAA,CAAAR,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACA,SAAAC,QAAA,CAAAC,SAAA;UACA,KAAAC,KAAA,CAAAF,QAAA,CAAAG,aAAA;QACA;QACAL,QAAA;MACA;IACA;IACA;MACAE,QAAA;QACAK,EAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAF,EAAA,GACA;UAAAG,SAAA,EAAAb,UAAA;UAAAc,OAAA;QAAA,EACA;QACAH,IAAA,GACA;UAAAE,SAAA,EAAAJ,YAAA;UAAAK,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAV,KAAA,CAAAU,QAAA,EAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAC,KAAA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;IACAC,UAAAN,QAAA;MACA,KAAAV,KAAA,CAAAU,QAAA,EAAAO,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}