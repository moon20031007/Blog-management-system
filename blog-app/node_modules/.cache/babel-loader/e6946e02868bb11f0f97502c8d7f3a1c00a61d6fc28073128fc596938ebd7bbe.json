{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    var validateId = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        id: '',\n        pass: ''\n      },\n      rules: {\n        id: [{\n          validator: validateId,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const form = {\n          username: this.ruleForm.id,\n          password: this.ruleForm.pass\n        };\n        if (valid) {\n          this.$http.post('/login', form).then(response => {\n            if (response.data.code == 0) {\n              this.$message.success('登录成功！');\n              this.$router.push('/');\n            } else {\n              this.$message.error('登录失败：' + response.data.msg);\n            }\n          }).catch(error => {\n            this.$message.error('登录失败：' + error);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["data","validateId","rule","value","callback","Error","validatePass","ruleForm","id","pass","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","form","username","password","$http","post","then","response","code","$message","success","$router","push","error","msg","catch","resetForm","resetFields"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template> \n    <div class=\"shell\">\n       \n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"60px\" class=\"demo-ruleForm\">\n            <div>\n                <div id=\"welcome-lines\" style=\"margin-top: -40px; margin-right: -50px;\">\n                    <div id=\"w-line-1\">你好! </div>\n                    <div id=\"w-line-2\">欢迎回来</div>\n                </div>\n                <div class=\"form-container\">\n                    <el-form-item label=\"用户名\" prop=\"id\">\n                        <el-input v-model.number=\"ruleForm.id\"></el-input>\n                    </el-form-item>\n                    <el-form-item label=\"密码\" prop=\"pass\">\n                        <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\n                    </el-form-item>\n                </div>\n            </div>\n            <el-form-item style=\"text-align: center; margin-left: -10%;\">\n                    <el-button type=\"primary\" @click=\"submitForm('ruleForm')\" style=\"margin-right: 20px; padding: 12px 40px; border-radius: 50px; font-size: 16px;\">登陆</el-button>\n                    <el-button @click=\"resetForm('ruleForm')\" style=\"padding: 12px 40px; border-radius: 50px; font-size: 16px;\">重置</el-button>\n                <div class=\"link-container\">\n                    <router-link to=\"/\" class=\"small-font-link\" style=\"text-decoration: none; color: grey\">返回首页</router-link>\n                    <router-link to=\"/signup\" class=\"small-font-link\" style=\"text-decoration: none; color: grey\">注册</router-link>\n                </div>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        var validateId = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else {\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            ruleForm: {\n                id: '',\n                pass: ''\n            },\n            rules: {\n                id: [\n                    { validator: validateId, trigger: 'blur' }\n                ],\n                pass: [\n                    { validator: validatePass, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                const form = { username: this.ruleForm.id, password: this.ruleForm.pass };\n                if (valid) {\n                    this.$http.post('/login', form)\n                        .then(response => {\n                            if (response.data.code == 0) {\n                                this.$message.success('登录成功！');\n                                this.$router.push('/');\n                            } else {\n                                this.$message.error('登录失败：' + response.data.msg);\n                            }\n                        })\n                        .catch(error => {\n                            this.$message.error('登录失败：' + error);\n                        });\n                } else {\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        }\n    }\n}\n</script>\n\n<style>\n.shell {\n    border: 1px solid #dcdfe6;\n    padding: 30px;\n    border-radius: 20px;\n    width: 30%;\n    margin: 10% auto 0;\n    background-color: white;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* 增加阴影 */\n}\n\n.form-container {\n  justify-content: center; /* 水平居中 */\n  margin-top: 20px;\n}\n\n.small-font-link {\n    font-size: 14px;\n    color: grey;\n    text-decoration: none;\n}\n\n\n.link-container {\n    display: flex;\n    justify-content: center;\n    margin-left: -10%;\n    gap: 80px;\n    margin-top: 10px;\n}\n\n#welcome-lines {\n  width: 100%;\n  text-align: center;\n  line-height: 1;\n}\n \n#w-line-1 {\n  color: #7f7f7f;\n  font-size: 65px;\n}\n \n#w-line-2 {\n  color: #9c9c9c;\n  font-size: 30px;\n  margin-top: 17px;\n}\n\n\n</style>"],"mappings":";AA+BA;EACAA,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA,IAAAE,YAAA,GAAAA,CAAAJ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAG,QAAA;QACAC,EAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAF,EAAA,GACA;UAAAG,SAAA,EAAAV,UAAA;UAAAW,OAAA;QAAA,EACA;QACAH,IAAA,GACA;UAAAE,SAAA,EAAAL,YAAA;UAAAM,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,MAAAC,IAAA;UAAAC,QAAA,OAAAb,QAAA,CAAAC,EAAA;UAAAa,QAAA,OAAAd,QAAA,CAAAE;QAAA;QACA,IAAAS,KAAA;UACA,KAAAI,KAAA,CAAAC,IAAA,WAAAJ,IAAA,EACAK,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAAzB,IAAA,CAAA0B,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAH,QAAA,CAAAI,KAAA,WAAAN,QAAA,CAAAzB,IAAA,CAAAgC,GAAA;YACA;UACA,GACAC,KAAA,CAAAF,KAAA;YACA,KAAAJ,QAAA,CAAAI,KAAA,WAAAA,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAG,UAAAnB,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAoB,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}