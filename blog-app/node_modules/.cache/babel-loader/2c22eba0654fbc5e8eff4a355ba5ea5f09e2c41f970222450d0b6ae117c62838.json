{"ast":null,"code":"export default {\n  name: 'MyLogList',\n  data() {\n    return {\n      logs: []\n    };\n  },\n  async created() {\n    await this.fetchLogs();\n  },\n  methods: {\n    async fetchLogs() {\n      this.$http.get('/log/all').then(response => {\n        if (response.data.code == 0) {\n          this.logs = response.data.data;\n        } else {\n          this.$message.error('获取日志失败：' + response.data.msg);\n        }\n      }).catch(error => {\n        this.$message.error('获取日志失败：' + error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","logs","created","fetchLogs","methods","$http","get","then","response","code","$message","error","msg","catch"],"sources":["src/views/LogView.vue"],"sourcesContent":["<template>\n    <div>\n        <my-nav></my-nav>\n        <div class=\"log-list\">\n        <main>\n            <article v-for=\"log in logs\" :key=\"log.logId\">\n            <div class=\"log-card\">\n                <header>\n                    <p class=\"meta\">{{ $formatTime(log.time) }}</p>\n                </header>\n                <section>\n                    <p class=\"content\">{{ log.content }}</p>\n                </section>\n            </div>\n          </article>\n        </main>\n    </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'MyLogList',\n    data() {\n        return {\n            logs: []\n        }\n    },\n    async created() {\n        await this.fetchLogs();\n    },\n    methods: {\n        async fetchLogs() {\n            this.$http.get('/log/all')\n                .then(response => {\n                    if (response.data.code == 0) {\n                        this.logs = response.data.data;\n                    } else {\n                        this.$message.error('获取日志失败：' + response.data.msg);\n                    }\n                })\n                .catch(error => {\n                    this.$message.error('获取日志失败：' + error);\n                });\n        }\n    }\n}\n</script>\n\n<style>\n.log-list {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin:3rem;\n    \n    padding: 1rem;\n    border-radius: 0.5rem;\n    \n}\n\n.log-card {\n    background-color: #f8f9fa;\n    padding: 1.5rem;\n    border-radius: 1rem;\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n    border: 1px solid #e0e0e0;\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n}\n\n.log-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\narticle .meta {\n    font-size: 0.9em;\n    color: #666;\n}\n</style>"],"mappings":"AAqBA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,WAAAC,SAAA;EACA;EACAC,OAAA;IACA,MAAAD,UAAA;MACA,KAAAE,KAAA,CAAAC,GAAA,aACAC,IAAA,CAAAC,QAAA;QACA,IAAAA,QAAA,CAAAR,IAAA,CAAAS,IAAA;UACA,KAAAR,IAAA,GAAAO,QAAA,CAAAR,IAAA,CAAAA,IAAA;QACA;UACA,KAAAU,QAAA,CAAAC,KAAA,aAAAH,QAAA,CAAAR,IAAA,CAAAY,GAAA;QACA;MACA,GACAC,KAAA,CAAAF,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA,aAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}