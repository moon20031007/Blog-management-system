{"ast":null,"code":"export default {\n  name: \"MyLmessageEditor\",\n  data() {\n    var valiteArea = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('留言不能为空'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      messageForm: {\n        textarea: ''\n      },\n      rules: {\n        textarea: [{\n          validator: valiteArea,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const form = {\n          content: this.messageForm.textarea\n        };\n        if (valid) {\n          this.$http.post('/lmessage/add', form).then(response => {\n            if (response.data.code == 0) {\n              this.$message.success('留言提交成功！');\n              this.messageForm.textarea = '';\n              setTimeout(() => location.reload(), 3000);\n            } else {\n              this.$message.error('留言提交失败：' + response.data.msg);\n            }\n          }).catch(error => {\n            this.$message.error('留言提交失败：' + error);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","data","valiteArea","rule","value","callback","Error","messageForm","textarea","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","form","content","$http","post","then","response","code","$message","success","setTimeout","location","reload","error","msg","catch","resetForm","resetFields"],"sources":["src/components/LmessageEditor.vue"],"sourcesContent":["<template>\n    <div class=\"Lmessage-card\">\n        <h2 style=\"text-align: center; color: #5492e3;\">欢迎您在此留下宝贵的意见！</h2>\n        <h4 style=\"text-align: center;\">您的有用建议都会被我们采纳用于完善网站！</h4>\n        <el-form :model=\"messageForm\" status-icon :rules=\"rules\" ref=\"messageForm\" class=\"demo-ruleForm\">\n            <el-form-item prop=\"textarea\" class=\"input\">\n                <el-input type=\"textarea\" placeholder=\"请输入你的留言\" :rows=\"10\" v-model=\"messageForm.textarea\"\n                    maxlength=\"100\" show-word-limit>\n                </el-input>\n            </el-form-item>\n            <el-form-item class=\"form-buttons\">\n                <el-button type=\"primary\" @click=\"submitForm('messageForm')\" size='small'>提交</el-button>\n                <el-button @click=\"resetForm('messageForm')\" size='small'>重置</el-button>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n\n<script>\nexport default {\n    name: \"MyLmessageEditor\",\n    data() {\n        var valiteArea = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('留言不能为空'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            messageForm: {\n                textarea: ''\n            },\n            rules: {\n                textarea: [\n                    { validator: valiteArea, trigger: 'blur' }\n                ]\n            }\n        };\n    },\n    methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                const form = { content: this.messageForm.textarea };\n                if (valid) {\n                    this.$http.post('/lmessage/add', form)\n                        .then(response => {\n                            if (response.data.code == 0) {\n                                this.$message.success('留言提交成功！');\n                                this.messageForm.textarea = '';\n                                setTimeout(() => location.reload(), 3000);\n                            } else {\n                                this.$message.error('留言提交失败：' + response.data.msg);\n                            }\n                        })\n                        .catch(error => {\n                            this.$message.error('留言提交失败：' + error);\n                        });\n                } else {\n                    return false;\n                }\n            });\n        },\n        resetForm(formName) {\n            this.$refs[formName].resetFields();\n        }\n    }\n\n}\n</script>\n\n<style>\n.Lmessage-card {\n    background-color: #f8f9fa;\n    border: 1px solid #ddd;\n    padding: 1rem;\n    border-radius: 0.5rem;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n    margin-left: 3rem;\n    margin-right: 3rem;\n}\n\n.input {\n    margin-bottom: 0.5rem;\n    margin-top: 1.5rem;\n}\n\n.form-buttons {\n    display: flex;\n    justify-content: flex-end;\n}\n</style>"],"mappings":"AAoBA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,WAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAD,QAAA,GACA;UAAAE,SAAA,EAAAR,UAAA;UAAAS,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,MAAAC,IAAA;UAAAC,OAAA,OAAAZ,WAAA,CAAAC;QAAA;QACA,IAAAS,KAAA;UACA,KAAAG,KAAA,CAAAC,IAAA,kBAAAH,IAAA,EACAI,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAAtB,IAAA,CAAAuB,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAnB,WAAA,CAAAC,QAAA;cACAmB,UAAA,OAAAC,QAAA,CAAAC,MAAA;YACA;cACA,KAAAJ,QAAA,CAAAK,KAAA,aAAAP,QAAA,CAAAtB,IAAA,CAAA8B,GAAA;YACA;UACA,GACAC,KAAA,CAAAF,KAAA;YACA,KAAAL,QAAA,CAAAK,KAAA,aAAAA,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAG,UAAAnB,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAoB,WAAA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}