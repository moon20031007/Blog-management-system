{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    var validateId = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      ruleForm: {\n        id: '',\n        pass: ''\n      },\n      rules: {\n        id: [{\n          validator: validateId,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const form = {\n          username: this.ruleForm.id,\n          password: this.ruleForm.pass\n        };\n        if (valid) {\n          axios.post('http://localhost:7000/login', form).then(response => {\n            console.log(response.data);\n            this.$message({\n              message: '登录成功！',\n              type: 'success'\n            });\n            this.$router.push('/');\n          }).catch(error => {\n            console.error('登录失败:', error);\n            this.$message.error('登录失败，请检查用户名和密码');\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validateId","rule","value","callback","Error","validatePass","ruleForm","id","pass","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","form","username","password","post","then","response","console","log","$message","message","type","$router","push","catch","error","resetForm","resetFields"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\r\n    <div style=\"border: 1px solid #dcdfe6; padding: 30px; border-radius: 4px; width: 30%; margin: 10% auto 0;\">\r\n        <div class=\"botton-container\"><el-button plain ><router-link to=\"/\">回到首页</router-link></el-button></div>\r\n        <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n            \r\n            <div class=\"login-container\">\r\n                <el-form-item label=\"用户名\" prop=\"id\">\r\n                <el-input v-model.number=\"ruleForm.id\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" prop=\"pass\">\r\n                    <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </div>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n                <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                <div class=\"link-container\"><router-link to=\"/signup\" class=\"small-font-link\" >还没有账号？去注册</router-link></div>\r\n            </el-form-item>\r\n        </el-form> \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        var validateId = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入用户名'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请输入密码'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            ruleForm: {\r\n                id: '',\r\n                pass: ''\r\n            },\r\n            rules: {\r\n                id: [\r\n                    { validator: validateId, trigger: 'blur' }\r\n                ],\r\n                pass: [\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                const form = { username: this.ruleForm.id, password: this.ruleForm.pass };\r\n                if (valid) {\r\n                    axios.post('http://localhost:7000/login', form)\r\n                        .then(response => {\r\n                            console.log(response.data);\r\n                            this.$message({\r\n                                message: '登录成功！',\r\n                                type: 'success'\r\n                            });\r\n                            this.$router.push('/');\r\n                        })\r\n                        .catch(error => {\r\n                            console.error('登录失败:', error);\r\n                            this.$message.error('登录失败，请检查用户名和密码');\r\n                        });\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.login-container{\r\n    position: relative;\r\n}\r\n.small-font-link {\r\n    float: right;\r\n    font-size: 15px; \r\n}\r\n.botton-container {\r\n  text-align: left; \r\n  margin-bottom: 20px; \r\n}\r\n\r\n.link-container {\r\n  text-align: right; \r\n}\r\n</style>"],"mappings":";AAuBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA,IAAAE,YAAA,GAAAA,CAAAJ,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAG,QAAA;QACAC,EAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAF,EAAA,GACA;UAAAG,SAAA,EAAAV,UAAA;UAAAW,OAAA;QAAA,EACA;QACAH,IAAA,GACA;UAAAE,SAAA,EAAAL,YAAA;UAAAM,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,MAAAC,IAAA;UAAAC,QAAA,OAAAb,QAAA,CAAAC,EAAA;UAAAa,QAAA,OAAAd,QAAA,CAAAE;QAAA;QACA,IAAAS,KAAA;UACAnB,KAAA,CAAAuB,IAAA,gCAAAH,IAAA,EACAI,IAAA,CAAAC,QAAA;YACAC,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAxB,IAAA;YACA,KAAA2B,QAAA;cACAC,OAAA;cACAC,IAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA;UACA,GACAC,KAAA,CAAAC,KAAA;YACAR,OAAA,CAAAQ,KAAA,UAAAA,KAAA;YACA,KAAAN,QAAA,CAAAM,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAC,UAAAnB,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAoB,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}