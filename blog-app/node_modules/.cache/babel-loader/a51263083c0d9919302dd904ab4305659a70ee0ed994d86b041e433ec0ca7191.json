{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    var validateId = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入用户名'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkId');\n        }\n        callback();\n      }\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      active: 0,\n      ruleForm1: {\n        id: '',\n        pass: '',\n        checkPass: ''\n      },\n      rules1: {\n        id: [{\n          validator: validateId,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      },\n      ruleForm2: {\n        name: '',\n        sex: '',\n        date: '',\n        phone: '',\n        email: '',\n        address: ''\n      },\n      rules2: {\n        name: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }],\n        sex: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        date: [{\n          type: 'date',\n          required: true,\n          message: '请选择生日日期',\n          trigger: 'change'\n        }],\n        phone: [{\n          required: true,\n          message: '请填写电话',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请填写邮箱',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请填写地址',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid && this.active === 0) {\n          const form1 = {\n            username: this.ruleForm1.id,\n            password: this.ruleForm1.pass\n          };\n          axios.post('/user/check', form1).then(response => {\n            console.log(response.data);\n            alert('验证成功！');\n          }).catch(error => {\n            console.error('注册失败:', error);\n            alert('已存在相同的用户名');\n          });\n        } else if (valid && this.active === 1) {\n          const form2 = {\n            username: this.ruleForm1.id,\n            password: this.ruleForm1.pass,\n            nickname: this.ruleForm2.name,\n            gender: this.ruleForm2.sex,\n            birthday: this.ruleForm2.date,\n            phone: this.ruleForm2.phone,\n            address: this.ruleForm2.address,\n            email: this.ruleForm2.email\n          };\n          axios.post('/user/add', form2).then(response => {\n            console.log(response.data);\n            alert('注册成功！');\n            this.$router.push('/login');\n          }).catch(error => {\n            console.error('注册失败:', error);\n            alert('注册失败，请检查您的用户名和密码。');\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","validateId","rule","value","callback","Error","ruleForm","checkPass","$refs","validateField","validatePass","validatePass2","pass","active","ruleForm1","id","rules1","validator","trigger","ruleForm2","name","sex","date","phone","email","address","rules2","required","message","type","methods","submitForm","formName","validate","valid","form1","username","password","post","then","response","console","log","alert","catch","error","form2","nickname","gender","birthday","$router","push"],"sources":["src/views/SignupView.vue"],"sourcesContent":["<template>\n    <div>\n        <el-steps :active=\"active\" finish-status=\"success\" space=\"50%\" style=\"margin-left: 32%;\">\n            <el-step title=\"步骤 1\"></el-step>\n            <el-step title=\"步骤 2\"></el-step>\n        </el-steps>\n\n        <div v-if=\"active === 0\"\n            style=\"border: 1px solid #dcdfe6; padding: 20px; border-radius: 4px; width: 50%; margin: 5% auto 0;\">\n            <el-form :model=\"ruleForm1\" status-icon :rules=\"rules1\" ref=\"ruleForm\" label-width=\"100px\"\n                class=\"demo-ruleForm\">\n                <el-form-item label=\"用户名\" prop=\"id\">\n                    <el-input v-model.number=\"ruleForm1.id\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"密码\" prop=\"pass\">\n                    <el-input type=\"password\" v-model=\"ruleForm1.pass\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"确认密码\" prop=\"checkPass\">\n                    <el-input type=\"password\" v-model=\"ruleForm1.checkPass\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"next\">提交</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n\n        <div v-if=\"active === 1\"\n            style=\"border: 1px solid #dcdfe6; padding: 20px; border-radius: 4px; width: 50%; margin: 5% auto 0;\">\n            <el-form :model=\"ruleForm2\" :rules=\"rules2\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\n                <el-form-item label=\"昵名\" prop=\"name\">\n                    <el-input v-model=\"ruleForm2.name\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" prop=\"sex\">\n                    <el-select v-model=\"ruleForm2.sex\" placeholder=\"请选择性别\">\n                        <el-option label=\"男\" value=\"男\"></el-option>\n                        <el-option label=\"女\" value=\"女\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"生日\" required>\n                    <el-col :span=\"11\">\n                        <el-form-item prop=\"date\">\n                            <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"ruleForm2.date\"\n                                style=\"width: 100%;\"></el-date-picker>\n                        </el-form-item>\n                    </el-col>\n                </el-form-item>\n                <el-form-item label=\"电话\" prop=\"phone\">\n                    <el-input v-model=\"ruleForm2.phone\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱\" prop=\"email\">\n                    <el-input v-model=\"ruleForm2.email\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"地址\" prop=\"address\">\n                    <el-input type=\"textarea\" v-model=\"ruleForm2.address\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"next\">立即创建</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n\n\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        var validateId = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入用户名'));\n            } else {\n                if (this.ruleForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkId');\n                }\n                callback();\n            }\n        };\n        var validatePass = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请输入密码'));\n            } else {\n                if (this.ruleForm.checkPass !== '') {\n                    this.$refs.ruleForm.validateField('checkPass');\n                }\n                callback();\n            }\n        };\n        var validatePass2 = (rule, value, callback) => {\n            if (value === '') {\n                callback(new Error('请再次输入密码'));\n            } else if (value !== this.ruleForm.pass) {\n                callback(new Error('两次输入密码不一致!'));\n            } else {\n                callback();\n            }\n        };\n        return {\n            active: 0,\n            ruleForm1: {\n                id: '',\n                pass: '',\n                checkPass: '',\n            },\n            rules1: {\n                id: [\n                    { validator: validateId, trigger: 'blur' }\n                ],\n                pass: [\n                    { validator: validatePass, trigger: 'blur' }\n                ],\n                checkPass: [\n                    { validator: validatePass2, trigger: 'blur' }\n                ],\n            },\n            ruleForm2: {\n                name: '',\n                sex: '',\n                date: '',\n                phone: '',\n                email: '',\n                address: ''\n            },\n            rules2: {\n                name: [\n                    { required: true, message: '请输入昵称', trigger: 'blur' },\n                ],\n                sex: [\n                    { required: true, message: '请选择性别', trigger: 'change' }\n                ],\n                date: [\n                    { type: 'date', required: true, message: '请选择生日日期', trigger: 'change' }\n                ],\n                phone: [\n                    { required: true, message: '请填写电话', trigger: 'blur' }\n                ],\n                email: [\n                    { required: true, message: '请填写邮箱', trigger: 'blur' }\n                ],\n                address: [\n                    { required: true, message: '请填写地址', trigger: 'blur' }\n                ]\n            }\n        };\n    },\n\n    methods: {\n        submitForm(formName) {\n            this.$refs[formName].validate((valid) => {\n                if (valid && this.active === 0) {\n                    const form1 = {username: this.ruleForm1.id, password: this.ruleForm1.pass};\n                    axios.post('/user/check', form1)\n                        .then(response => {\n                            console.log(response.data);\n                            alert('验证成功！');\n                        })\n                        .catch(error => {\n                            console.error('注册失败:', error);\n                            alert('已存在相同的用户名');\n                        });\n                } else if (valid && this.active === 1) {\n                    const form2 = {\n                        username: this.ruleForm1.id,\n                        password: this.ruleForm1.pass,\n                        nickname: this.ruleForm2.name,\n                        gender: this.ruleForm2.sex,\n                        birthday: this.ruleForm2.date,\n                        phone: this.ruleForm2.phone,\n                        address: this.ruleForm2.address,\n                        email: this.ruleForm2.email\n                    };\n                    axios.post('/user/add', form2)\n                        .then(response => {\n                            console.log(response.data);\n                            alert('注册成功！');\n                            this.$router.push('/login');\n                        })\n                        .catch(error => {\n                            console.error('注册失败:', error);\n                            alert('注册失败，请检查您的用户名和密码。');\n                        });\n                } else {\n                    console.log('error submit!!');\n                    return false;\n                }\n            });\n        },\n    }\n}\n\n</script>\n\n<style></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}