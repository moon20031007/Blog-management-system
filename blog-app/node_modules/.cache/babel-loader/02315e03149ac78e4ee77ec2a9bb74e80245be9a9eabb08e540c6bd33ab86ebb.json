{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'TestComponent',\n  data() {\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.accountForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      accountForm: {\n        id: '',\n        password: '',\n        check_password: '',\n        name: '',\n        sex: '',\n        date: '',\n        phone: '',\n        email: '',\n        address: ''\n      },\n      rules: {\n        id: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        check_password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入昵称',\n          trigger: 'blur'\n        }],\n        sex: [{\n          required: true,\n          message: '请选择性别',\n          trigger: 'change'\n        }],\n        date: [{\n          type: 'date',\n          required: true,\n          message: '请选择生日日期',\n          trigger: 'change'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入电话号码',\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: '请输入地址',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        if (valid) {\n          const form = {\n            username: this.accountForm.id,\n            password: this.accountForm.password,\n            nickname: this.accountForm.name,\n            gender: this.accountForm.sex,\n            birthday: this.accountForm.date,\n            phone: this.accountForm.phone,\n            address: this.accountForm.address,\n            email: this.accountForm.email\n          };\n          this.$http.post('/register', form).then(response => {\n            if (response.data.code == 0) {\n              this.$message.success('注册成功！');\n              this.$router.push('/login');\n            } else {\n              this.$message.error('注册失败：' + response.data.msg);\n            }\n          }).catch(error => {\n            this.$message.error('注册失败：' + error);\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePass","rule","value","callback","Error","accountForm","password","id","check_password","sex","date","phone","email","address","rules","required","message","trigger","validator","type","methods","submitForm","formName","$refs","validate","valid","form","username","nickname","gender","birthday","$http","post","then","response","code","$message","success","$router","push","error","msg","catch"],"sources":["src/views/SignupView.vue"],"sourcesContent":["<template>\r\n    <div style=\"border: 1px solid #dcdfe6; padding: 20px; border-radius: 20px; width: 50%; margin: 2% auto 0; background-color: white;\">\r\n        <h1 style=\"color: #7f7f7f;\">注册</h1>\r\n        <el-form :model=\"accountForm\" :rules=\"rules\" ref=\"accountForm\" label-width=\"100px\"> \r\n            <el-form-item label=\"用户名\" prop=\"id\">\r\n                <el-input v-model=\"accountForm.id\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"密码\" prop=\"password\">\r\n                <el-input type=\"password\" v-model=\"accountForm.password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"确认密码\" prop=\"check_password\">\r\n                <el-input type=\"password\" v-model=\"accountForm.check_password\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"昵称\" prop=\"name\">\r\n                <el-input v-model=\"accountForm.name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"性别\" prop=\"sex\">\r\n                <el-select v-model=\"accountForm.sex\" placeholder=\"请选择性别\">\r\n                    <el-option label=\"男\" value=\"男\"></el-option>\r\n                    <el-option label=\"女\" value=\"女\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"生日\" required>\r\n                <el-col :span=\"11\">\r\n                    <el-form-item prop=\"date\">\r\n                        <el-date-picker type=\"date\" placeholder=\"选择日期\" v-model=\"accountForm.date\"\r\n                            style=\"width: 100%;\"></el-date-picker>\r\n                    </el-form-item>\r\n                </el-col>\r\n            </el-form-item>\r\n            <el-form-item label=\"电话\" prop=\"phone\">\r\n                <el-input v-model=\"accountForm.phone\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"邮箱\" prop=\"email\">\r\n                <el-input v-model=\"accountForm.email\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"地址\" prop=\"address\">\r\n                <el-input type=\"textarea\" v-model=\"accountForm.address\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <div style=\"text-align: center; margin-left: -15%;\">\r\n                    <el-button type=\"primary\" @click=\"submitForm('accountForm')\" style=\"padding: 12px 40px; border-radius: 50px; font-size: 16px;\">立即创建</el-button>\r\n                </div>\r\n                <div class=\"link-container\">\r\n                    <router-link to=\"/\" class=\"small-font-link\" style=\"text-decoration: none; color: grey;\">返回首页</router-link>\r\n                    <router-link to=\"/login\" class=\"small-font-link\" style=\"text-decoration: none; color: grey\">已经有账号？去登陆</router-link>\r\n                </div>\r\n            </el-form-item>\r\n        </el-form> \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'TestComponent',\r\n    data() {\r\n        var validatePass = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('请再次输入密码'));\r\n            } else if (value !== this.accountForm.password) {\r\n                callback(new Error('两次输入密码不一致!'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            accountForm: {\r\n                id: '',\r\n                password: '',\r\n                check_password: '',\r\n                name: '',\r\n                sex: '',\r\n                date: '',\r\n                phone: '',\r\n                email: '',\r\n                address: ''\r\n            },\r\n            rules: {\r\n                id: [\r\n                    { required: true, message: '请输入用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' }\r\n                ],\r\n                check_password: [\r\n                    { validator: validatePass, trigger: 'blur' }\r\n                ],\r\n                name: [\r\n                    { required: true, message: '请输入昵称', trigger: 'blur' }\r\n                ],\r\n                sex: [\r\n                    { required: true, message: '请选择性别', trigger: 'change' }\r\n                ],\r\n                date: [\r\n                    { type: 'date', required: true, message: '请选择生日日期', trigger: 'change' }\r\n                ],\r\n                phone: [\r\n                    { required: true, message: '请输入电话号码', trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    { required: true, message: '请输入邮箱', trigger: 'blur' }\r\n                ],\r\n                address: [\r\n                    { required: true, message: '请输入地址', trigger: 'blur' }\r\n                ],\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    const form = {\r\n                        username: this.accountForm.id,\r\n                        password: this.accountForm.password,\r\n                        nickname: this.accountForm.name,\r\n                        gender: this.accountForm.sex,\r\n                        birthday: this.accountForm.date,\r\n                        phone: this.accountForm.phone,\r\n                        address: this.accountForm.address,\r\n                        email: this.accountForm.email\r\n                    };\r\n                    this.$http.post('/register', form)\r\n                        .then(response => {\r\n                            if (response.data.code == 0) {\r\n                                this.$message.success('注册成功！');\r\n                                this.$router.push('/login');\r\n                            } else {\r\n                                this.$message.error('注册失败：' + response.data.msg);\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            this.$message.error('注册失败：' + error);\r\n                        });\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.link-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-left: -5%;\r\n    gap: 80px;\r\n    margin-top: 10px;\r\n}\r\n</style>"],"mappings":";AAqDA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,YAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,KAAA,UAAAG,WAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,WAAA;QACAE,EAAA;QACAD,QAAA;QACAE,cAAA;QACAV,IAAA;QACAW,GAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,OAAA;MACA;MACAC,KAAA;QACAP,EAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,QAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,cAAA,GACA;UAAAU,SAAA,EAAAlB,YAAA;UAAAiB,OAAA;QAAA,EACA;QACAnB,IAAA,GACA;UAAAiB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,GAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,IAAA,GACA;UAAAS,IAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,KAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,KAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,OAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,MAAAC,IAAA;YACAC,QAAA,OAAAtB,WAAA,CAAAE,EAAA;YACAD,QAAA,OAAAD,WAAA,CAAAC,QAAA;YACAsB,QAAA,OAAAvB,WAAA,CAAAP,IAAA;YACA+B,MAAA,OAAAxB,WAAA,CAAAI,GAAA;YACAqB,QAAA,OAAAzB,WAAA,CAAAK,IAAA;YACAC,KAAA,OAAAN,WAAA,CAAAM,KAAA;YACAE,OAAA,OAAAR,WAAA,CAAAQ,OAAA;YACAD,KAAA,OAAAP,WAAA,CAAAO;UACA;UACA,KAAAmB,KAAA,CAAAC,IAAA,cAAAN,IAAA,EACAO,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAAnC,IAAA,CAAAoC,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;cACA,KAAAH,QAAA,CAAAI,KAAA,WAAAN,QAAA,CAAAnC,IAAA,CAAA0C,GAAA;YACA;UACA,GACAC,KAAA,CAAAF,KAAA;YACA,KAAAJ,QAAA,CAAAI,KAAA,WAAAA,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}