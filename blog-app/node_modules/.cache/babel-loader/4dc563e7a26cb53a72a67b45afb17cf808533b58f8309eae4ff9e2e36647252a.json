{"ast":null,"code":"export default {\n  name: \"MyLmessageEditor\",\n  data() {\n    var valiteArea = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('留言不能为空'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      messageForm: {\n        textarea: ''\n      },\n      rules: {\n        textarea: [{\n          validator: valiteArea,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm(formName) {\n      this.$refs[formName].validate(valid => {\n        const form = {\n          content: this.messageForm.textarea\n        };\n        if (valid) {\n          this.$http.post('/lmessage/add', form).then(response => {\n            if (response.data.code == 0) {\n              this.$message.success('留言提交成功！');\n              this.messageForm.textarea = '';\n              setTimeout(() => location.reload(), 3000);\n            } else {\n              this.$message.error('留言提交失败：' + response.data.msg);\n            }\n          }).catch(error => {\n            this.$message.error('留言提交失败：' + error);\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"names":["name","data","valiteArea","rule","value","callback","Error","messageForm","textarea","rules","validator","trigger","methods","submitForm","formName","$refs","validate","valid","form","content","$http","post","then","response","code","$message","success","setTimeout","location","reload","error","msg","catch","resetForm","resetFields"],"sources":["src/components/LmessageEditor.vue"],"sourcesContent":["<template>\r\n    <div class=\"Lmessage-card\">\r\n        <h1 style=\"text-align: center; color: #5492e3;\">欢迎您在此留下宝贵的意见！</h1>\r\n        <p style=\"text-align: center; color: #5492e3;\">您的有用建议都会被我们采纳用于完善网站！</p>\r\n        <el-form :model=\"messageForm\" status-icon :rules=\"rules\" ref=\"messageForm\" class=\"demo-ruleForm\">\r\n            <el-form-item prop=\"textarea\" class=\"input\">\r\n                <el-input type=\"textarea\" placeholder=\"请输入你的留言\" :rows=\"10\" v-model=\"messageForm.textarea\"\r\n                    maxlength=\"100\" show-word-limit>\r\n                </el-input>\r\n            </el-form-item>\r\n            <el-form-item class=\"form-buttons\">\r\n                <el-button type=\"primary\" @click=\"submitForm('messageForm')\" size='small'>提交</el-button>\r\n                <el-button @click=\"resetForm('messageForm')\" size='small'>重置</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n    name: \"MyLmessageEditor\",\r\n    data() {\r\n        var valiteArea = (rule, value, callback) => {\r\n            if (value === '') {\r\n                callback(new Error('留言不能为空'));\r\n            } else {\r\n                callback();\r\n            }\r\n        };\r\n        return {\r\n            messageForm: {\r\n                textarea: ''\r\n            },\r\n            rules: {\r\n                textarea: [\r\n                    { validator: valiteArea, trigger: 'blur' }\r\n                ]\r\n            }\r\n        };\r\n    },\r\n    methods: {\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                const form = { content: this.messageForm.textarea };\r\n                if (valid) {\r\n                    this.$http.post('/lmessage/add', form)\r\n                        .then(response => {\r\n                            if (response.data.code == 0) {\r\n                                this.$message.success('留言提交成功！');\r\n                                this.messageForm.textarea = '';\r\n                                setTimeout(() => location.reload(), 3000);\r\n                            } else {\r\n                                this.$message.error('留言提交失败：' + response.data.msg);\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            this.$message.error('留言提交失败：' + error);\r\n                        });\r\n                } else {\r\n                    return false;\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n.Lmessage-card {\r\n    background-color: white;\r\n    border: 1px solid #ddd;\r\n    padding: 1rem;\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\r\n    margin-left: 3rem;\r\n    margin-right: 3rem;\r\n}\r\n\r\n.input {\r\n    margin-bottom: 0.5rem;\r\n    margin-top: 1.5rem;\r\n}\r\n\r\n.form-buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n</style>"],"mappings":"AAoBA;EACAA,IAAA;EACAC,KAAA;IACA,IAAAC,UAAA,GAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;MACA,IAAAD,KAAA;QACAC,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAE,WAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAD,QAAA,GACA;UAAAE,SAAA,EAAAR,UAAA;UAAAS,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAAC,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAE,QAAA,CAAAC,KAAA;QACA,MAAAC,IAAA;UAAAC,OAAA,OAAAZ,WAAA,CAAAC;QAAA;QACA,IAAAS,KAAA;UACA,KAAAG,KAAA,CAAAC,IAAA,kBAAAH,IAAA,EACAI,IAAA,CAAAC,QAAA;YACA,IAAAA,QAAA,CAAAtB,IAAA,CAAAuB,IAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAnB,WAAA,CAAAC,QAAA;cACAmB,UAAA,OAAAC,QAAA,CAAAC,MAAA;YACA;cACA,KAAAJ,QAAA,CAAAK,KAAA,aAAAP,QAAA,CAAAtB,IAAA,CAAA8B,GAAA;YACA;UACA,GACAC,KAAA,CAAAF,KAAA;YACA,KAAAL,QAAA,CAAAK,KAAA,aAAAA,KAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACAG,UAAAnB,QAAA;MACA,KAAAC,KAAA,CAAAD,QAAA,EAAAoB,WAAA;IACA;EACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}